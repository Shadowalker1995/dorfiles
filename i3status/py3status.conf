# i3status configuration file.
# see "man i3status" for documentation.

# It is important that this file is edited as UTF-8.
# The following line should contain a sharp s:
# √ü
# If the above line is not correctly displayed, fix your editor first!

general {
    #output_format = i3bar
    colors = true
    interval = 5
    color_good = "#2AA198"
    color_bad = "#586E75"
    color_degraded = "#DC322F"
}

py3status {
    nagbar_font = 'pango:Ubuntu Mono 12'
    #nagbar_font = 'pango:UbuntuMono Nerd Font 12'
}

order += "window"

order += "group player"

#order += "ethernet enp4s0"
order += "group network"

#order += "cpu_temperature 0"
# order += "load"
# order += "memory"
# order += "conky memory"
#order += "cpu_usage"
order += "group disks"
order += "group system"

order += "volume master"
order += "group tz"
#order += "tztime holder__hey_man"

order += "battery_level"

# order += "static_string i3lock"
order += "static_string screenshot"
order += "online_status"
#order += "gov"


# show alternative instead of empty title
window {
    format = '{title}|‚ô•'
    separator = false
}

group player {
    frame rhythmbox {
        static_string rhythmbox_prev {
            format = "ÔÅâ"
            separator = false
            on_click 1 = "exec --no-startup-id pidof rhythmbox && playerctl -p rhythmbox previous && py3-cmd refresh external_script rhythmbox"
            separator = false
        }
        external_script rhythmbox {
            cache_timeout = 20
            format = "{output}"
            script_path = "STATUS=$(playerctl -p rhythmbox -f {{status}} metadata); if test $STATUS = 'Playing'; then echo -n 'ÔÅå '; else echo -n 'ÔÅã '; fi; playerctl -p rhythmbox -f '{{artist}} - {{title}}' metadata && if test $STATUS = 'Playing'; then echo '#2AA198'; else echo '#586E75'; fi || echo"
            on_click 1 = "exec --no-startup-id pidof rhythmbox && playerctl -p rhythmbox play-pause && py3-cmd refresh external_script rhythmbox || rhythmbox"
            on_click 3 = "exec --no-startup-id xdotool key Super+m"
            separator = false
        }
        static_string rhythmbox_next {
            format = "ÔÅê"
            on_click 1 = "exec --no-startup-id pidof rhythmbox && playerctl -p rhythmbox next && py3-cmd refresh external_script rhythmbox"
            separator = false
        }
    }

    #frame audacious {
        #static_string audacious_prev {
            #format = "ÔÅâ"
            #on_click 1 = "exec --no-startup-id qdbus org.mpris.MediaPlayer2.audacious /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Previous"
            ##on_click 1 = "exec playerctl -p audacious previous"
            #separator = false
        #}
        #external_script audacious {
            #cache_timeout = 20
            #format = "{output}"
            #script_path = 'pidof audacious > /dev/null && echo "ÔÄÅ"$(qdbus org.mpris.MediaPlayer2.audacious /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Metadata | grep "^xesam:\(title\|artist\):" | grep -o " .*" | column | sed "s/\t\+/:/g") || (echo "ÔÅã")'
            #on_click 1 = "exec --no-startup-id pidof audacious && qdbus org.mpris.MediaPlayer2.audacious /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.PlayPause || audacious --play"
            ##on_click 1 = "exec playerctl -p audacious play-pause"
            #separator = false
        #}
        #static_string audacious_next {
            #format = "ÔÅê"
            #on_click 1 = "exec --no-startup-id qdbus org.mpris.MediaPlayer2.audacious /org/mpris/MediaPlayer2 org.mpris.MediaPlayer2.Player.Next"
            ##on_click 1 = "exec playerctl -p audacious next"
            #separator = false
        #}
    #}

    #frame mpd {
        #static_string mpd_prev {
            #format = "ÔÅâ"
            #on_click 1 = "exec --no-startup-id mpc prev"
            #separator = false
        #}
        #mpd_status {
            #format = "[[{artist} - ]{title}]"
            #on_click 1 = "exec --no-startup-id mpc toggle"
            #on_click 3 = "exec --no-startup-id alacritty -t 'ncmpcpp' -e ncmpcpp"
            #separator = false
        #}
        #static_string mpd_next {
            #format = "ÔÅê"
            #on_click 1 = "exec --no-startup-id mpc next"
            #separator = false
        #}
    #}
}

tztime holder__hey_man {
    format = "holder__hey_man"
    separator = false
}

group network {
    net_rate {
        cache_timeout = 5
        #format = "ÔÉ≠ {down} ÔÉÆ {up}"
        format = "ÔÑÉ{down}  ÔÑÇ{up}"
        unit="b/s"
        si_units=True
        format_value="[\?min_length=9 {value:.1f} {unit}]"
        # format = "Ôá´  {total}"
        precision = 0
        format_no_connection = ""
        hide_if_zero=True
        separator = false
    }

    wifi wlp6s0 {
        format = '{bitrate} {bitrate_unit} {signal_percent}% {ssid} {ip}|down'
        device = "wlp6s0"
        down_color = "degraded"
    }

    networkmanager {
        devices = ["ztkblsdrn3"]
        format_device = "[\?if=general_connection zerotier [\?soft ][\?color=ap_signal {ap_ssid} {ap_bars} {ap_signal}%][\?soft ][\?color=good {ip4_address1}]]"
    }

    ipv6 {
        format_up = "%ip"
        format_down = "no IPv6"
        separator = false
    }
}

ethernet enp4s0 {
    format_up = "E: %ip (%speed)"
    format_down = ""
}

group disks {
    click_mode = "button"

    frame root-home {
        disk "/" {
            #format = "‚õÅÔáÄ %avail"
            format = "ÔÇ† %avail"
            on_click 1 = "exec --no-startup-id nautilus /"
            separator = false
        }
        disk "/home" {
            format = "ÔÄï%avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus $HOME"
            separator = false
        }
    }

    frame internal {
        disk "/media/zzhenry/1090165110901651" {
            format = "D: %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/1090165110901651"
            separator = false
        }

        disk "/media/zzhenry/Data" {
            format = "Data %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Data"
            separator = false
        }
    }

    frame ssd {
        disk "/media/zzhenry/Data2.0T" {
            format = "2T %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Data2.0T"
            separator = false
        }

        disk "/media/zzhenry/Samsung1T" {
            format = "1T %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Samsung1T"
            separator = false
        }
    }

    frame hdd {
        disk "/media/zzhenry/S1T" {
            format = "S1T %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/S1T"
            separator = false
        }

        disk "/media/zzhenry/Medias" {
            format = "Medias %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Medias"
            separator = false
        }

        disk "/media/zzhenry/Partition1" {
            format = "Part1 %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Partition1"
            separator = false
        }

        disk "/media/zzhenry/Partition2" {
            format = "Part2 %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Partition2"
            separator = false
        }

        disk "/media/zzhenry/Partition3" {
            format = "Part3 %avail"
            format_not_mounted = "None"
            on_click 1 = "exec --no-startup-id nautilus /media/zzhenry/Partition3"
            separator = false
        }
    }
    separator = false
}

# group showing disk space or times using button to change what is shown.
group system {
    click_mode = "button"

    frame cpu-gpu {
        # specify a list of cpus to use. see "grep cpu /proc/stat"
        sysdata {
            cpus = []                # avg + all CPUs
            format = '[\?color=cpu_used_percent üöÄ {cpu_used_percent}%] '
            format += '[\?color=mem_used_percent {mem_used}/{mem_total}]'
            #format += '[\?color=cpu_temp {cpu_temp}¬∞C]'
            #on_click 1 = "exec --no-startup-id xdotool key Super+F1"
            on_click 1 = "exec --no-startup-id if test ! -z $(tmux list-windows -t float -f '#{==:#W,processes}' -F '#W'); then tmux select-window -t float:processes; else tmux neww -t float -n processes htop; fi && xdotool key Super+F1"
            separator = false
        }

        lm_sensors {
            #format_chip = '[\?if=name=coretemp-isa-0000 CPU ]'
            #format_chip += '[\?if=name=nvme-pci-0700 GPU ]'
            format_chip = '{format_sensor}'
            format_sensor = '\?color=auto.input {input}¬∞C'
            sensors = ['package*']
            separator = false
        }

        # display nvidia properties
        nvidia_smi {
            format_gpu = 'üõ∏ [\?color=temperature.gpu {temperature.gpu}¬∞C] '
            format_gpu += '[\?color=memory.used_percent {memory.used_percent:.1f}%]'
            #on_click 1 = "exec --no-startup-id xdotool key Super+F1"
            on_click 1 = "exec --no-startup-id test ! -z $(tmux list-windows -t float -f '#{==:#W,netspeed}' -F '#W') && tmux select-window -t float:netspeed || tmux neww -t float -n netspeed sudo nethogs && xdotool key Super+F1"
            separator = false
        }
    }

    frame temp {
        lm_sensors {
            format_chip = '{format_sensor}'
            format_sensor = '[\?if=name=core_0 CPU1 ]'
            format_sensor += '[\?if=name=core_1 CPU2 ]'
            format_sensor += '[\?if=name=core_2 CPU3 ]'
            format_sensor += '[\?if=name=core_3 CPU4 ]'
            #format_sensor += '[\?if=name=gpu_core GPU ]'
            format_sensor += '[\?color=auto.input {input}¬∞C]'
            #sensors = ['core*', 'composite*']
            sensors = ['core*']
        }
    }

    frame load {
        load {
            #format = "ÔÉ§ %1min"
            format = "%1min, %5min, %15min"
            #max_threshold = 1.0
            separator = false
        }
    }
    separator = false
}

cpu_temperature 0 {
    format = "%degrees ¬∞C"
    #path = "/sys/devices/platform/coretemp.0/hwmon/hwmon3/temp1_input"
    separator = false
}

conky memory {
    format = "üíø %used / %available"
    threshold_degraded = "1G"
    format_degraded = "MEMORY < %available"
    separator = false
}

# conky memory {
#     format = 'Memory [\?color=lightskyblue {mem}/{memmax}] '
#     format += '[\?color=memperc {memperc}% \[{membar}\]]'
#     thresholds = [
#         (0, 'darkgray'), (0.001, 'good'), (50, 'degraded'),
#         (75, 'orange'), (85, 'bad')
#     ]
# }

cpu_usage {
    format = "üöÄ %usage "
    #format = "ÔÇÖ %usage "
    max_threshold = 75
    #format_above_threshold = "Warning above threshold: %usage"
    separator = false
}


volume master {
    format = "‚ô™: %volume"
    format_muted = "‚ô™: muted (%volume)"
    device = "default"
    on_click 1 = "exec --no-startup-id ~/.config/i3/Volume-Mute.sh && py3-cmd refresh volume master"
    on_click 4 = "exec --no-startup-id ~/.config/i3/Volume-Control.sh + && py3-cmd refresh volume master"
    on_click 5 = "exec --no-startup-id ~/.config/i3/Volume-Control.sh - && py3-cmd refresh volume master"
    separator = false
}


group tz {
    format = "{output}"

    tztime local {
        format = "üìÖ %a %e %b üïë%H:%M"
        separator = false
        on_click 1 = "exec --no-startup-id gnome-calendar"
    }
    tztime ny {
        format = "üìÖ %a %e %b NY üïë%H:%M"
        separator = false
        timezone = "America/New_York"
        on_click 1 = "exec --no-startup-id gnome-calendar"
    }
    tztime cn {
        format = "üìÖ %a %e %b CN üïë%H:%M"
        separator = false
        timezone = "Asia/Shanghai"
        on_click 1 = "exec --no-startup-id gnome-calendar"
    }
    separator = false
}

battery_level {
    #format = "%status %percentage %remaining %emptytime"
    format = "{icon} {percent} {time_remaining}"
    format_down = "No battery"
    last_full_capacity = true
    integer_battery_capacity = true
    #status_chr = "Ôá¶"
    status_chr = "‚ö°"
    #status_bat = "‚òâ"
    #status_bat = "ÔâÄ-"
    status_bat = "Ôàì"
    status_unk = ""
    status_full = "‚òª"
    threshold_bad = 15
    threshold_type = time
    hide_when_full = True
    separator = false
}

static_string i3lock {
    format = "ÔÄ£"
    on_click 1 = "exec --no-startup-id ~/.config/i3/i3lock.sh"
    separator = false
}

static_string screenshot {
    format = "ÔÄ∞"
    on_click 1 = "exec --no-startup-id flameshot gui -d 100 -p ~/Pictures/Screenshots/"
    on_click 3 = "exec --no-startup-id flameshot full -d 100 -c -p ~/Pictures/Screenshots/"
    separator = false
}

online_status {
    format_offline = "ÔÉÇ"
    format_online = "ÔÉÇ"
    timeout = 5
    url = "https://cn.bing.com/"
    separator = false
    on_click 1 = "exec --no-startup-id tmux neww -t float -n netspeed sudo nethogs && xdotool key Super+F1"
}

